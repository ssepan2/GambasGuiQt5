' Gambas class file

Create Private
Class DockAnchorBase

'Constants
'
Public Const MENUBAR_HEIGHT As Integer = 22

'Enums
'
Public Enum DockNone = 0, DockTop = 1, DockRight = 2, DockBottom = 3, DockLeft = 4
Public Enum AnchorNone = 0, AnchorTop = 1, AnchorRight = 2, AnchorBottom = 4, AnchorLeft = 8

'Fields (should be Protected, but must be Public for now; maybe do readony properties?)
'
'save reference to control,form
Public $frmForm As Form
Public $ctlControl As Control

Public $bUsingMenubar As Boolean

'TODO:make (read-only) properties of dock, anchor, initial, new?
'dock is integer enum
Public $iDock As Integer = Me.DockNone
'anchor is integer mask of enums
Public $iAnchor As Integer = Me.DockNone

' Need to know initial design in order to enforce Anchor at runtime
'Not  valid until after ctor(): _new()
Public $iControlDesignerX As Integer = 0
Public $iControlDesignerY As Integer = 0
Public $iControlDesignerWidth As Integer = 0
Public $iControlDesignerHeight As Integer = 0

' Public $iFormDesignerX As Integer = 0
' Public $iFormDesignerY As Integer = 0
Public $iFormDesignerWidth As Integer = 0
Public $iFormDesignerHeight As Integer = 0

'Should show design after Resize
'Not valid until after each Apply().
Public $iControlNewX As Integer = $iControlDesignerX
Public $iControlNewY As Integer = $iControlDesignerY
Public $iControlNewWidth As Integer = $iControlDesignerWidth
Public $iControlNewHeight As Integer = $iControlDesignerHeight

'ctor()
'
Public Sub _new(controlParam As Control, formParam As Form, usingMenubarParam As Boolean)
    'Note: not doing this ByRef, but pointers seem to be working to change passed controls.

    'only used to validate options
    'Dim aiAnchorEnums As New Integer[]

    Me.$ctlControl = controlParam
    Me.$frmForm = formParam
    Me.$bUsingMenubar = usingMenubarParam

    'Note; must call New before form resizes in order to capture initial design
    Me.$iControlDesignerX = Me.$ctlControl.X
    Me.$iControlDesignerY = Me.$ctlControl.Y
    Me.$iControlDesignerWidth = Me.$ctlControl.Width
    Me.$iControlDesignerHeight = Me.$ctlControl.Height

    ' Me.$iFormDesignerX = Me.$frmForm.X
    ' Me.$iFormDesignerY = Me.$frmForm.Y 'Don't care about these 1st two
    Me.$iFormDesignerWidth = formParam.Width 'Need these last two
    Me.$iFormDesignerHeight = Me.$frmForm.Height

    ' Debug Subst("c:&1,x:&2,y:&3,W:&4,h:&5", Me.$ctlControl.Name, Me.$iControlDesignerX, Me.$iControlDesignerY, Me.$iControlDesignerWidth, Me.$iControlDesignerHeight)
Catch
    Debug Log.FormatError
    Debug Error.Text

End
